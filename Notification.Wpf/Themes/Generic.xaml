<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Notification.Wpf.Controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpf="clr-namespace:Notification.Wpf"
                    xmlns:p="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:converters="clr-namespace:Notification.Wpf.Converters"
                    xmlns:constants="clr-namespace:Notification.Wpf.Constants"
                    xmlns:helpers="clr-namespace:Notification.Wpf.Sample.Helpers">

    <SolidColorBrush x:Key="BorderBrush" Color="#EEE" p:Freeze="True"/>
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" p:Freeze="True"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="White" p:Freeze="True"/>
    <SolidColorBrush x:Key="WhiteSmokeBrush" Color="WhiteSmoke" p:Freeze="True"/>
    <SolidColorBrush x:Key="BlackBrush" Color="Black" p:Freeze="True"/>
    <SolidColorBrush x:Key="GrayBrush" Color="Gray" p:Freeze="True"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="LightGray" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkGrayBrush" Color="DarkGray" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkRedBrush" Color="DarkRed" p:Freeze="True"/>
    <SolidColorBrush x:Key="RedBrush" Color="Red" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkOrangeBrush" Color="DarkOrange" p:Freeze="True"/>
    <SolidColorBrush x:Key="OrangeRedBrush" Color="OrangeRed" p:Freeze="True"/>
    <SolidColorBrush x:Key="OrangeBrush" Color="Orange" p:Freeze="True"/>
    <SolidColorBrush x:Key="YellowBrush" Color="Yellow" p:Freeze="True"/>
    <SolidColorBrush x:Key="LightYellowBrush" Color="LightYellow" p:Freeze="True"/>
    <SolidColorBrush x:Key="GreenBrush" Color="Green" p:Freeze="True"/>
    <SolidColorBrush x:Key="LimeGreenBrush" Color="LimeGreen" p:Freeze="True"/>
    <SolidColorBrush x:Key="BlueBrush" Color="Blue" p:Freeze="True"/>
    <SolidColorBrush x:Key="LimeBrush" Color="Lime" p:Freeze="True"/>
    <SolidColorBrush x:Key="DarkBlueBrush" Color="DarkBlue" p:Freeze="True"/>
    <DropShadowEffect x:Key="Shadow" p:Freeze="True"/>
    <ScaleTransform x:Key="Scale1.1" ScaleX="1.1" ScaleY="1.1" p:Freeze="True"/>
    <ScaleTransform x:Key="Scale0.9" ScaleX="0.9" ScaleY="0.9" p:Freeze="True"/>

    <Color x:Key="WhiteColor" A="255"  R="255" G="255" B="255"/>
    <Color x:Key="BlackColor" A="255"  R="0" G="0" B="0"/>

    <Viewbox x:Key="LinkIcon" Height="20" x:Shared="False" >
        <Path  
              Data="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"
              Fill="{StaticResource WhiteBrush}" >
        </Path>
        <Viewbox.RenderTransform>
            <RotateTransform Angle="135"/>
        </Viewbox.RenderTransform>

    </Viewbox>

    <Viewbox x:Key="MinimizeIcon" Height="20" x:Shared="False" >
        <Path 
              Data="M480 480H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h448c17.7 0 32 14.3 32 32s-14.3 32-32 32z"
              Fill="{StaticResource WhiteBrush}"  />
    </Viewbox>

    <Viewbox x:Key="MaximizeIcon" Height="20" x:Shared="False" >
        <Path 
              Data="M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V192h416v234z"
              Fill="{StaticResource WhiteBrush}"/>
    </Viewbox>

    <Viewbox x:Key="SettingIcon" Height="20" x:Shared="False" >
        <Path 
              Data="M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z"
              Fill="{StaticResource WhiteBrush}" />
    </Viewbox>

    <!--<fa5:ImageAwesome x:Key="LoadIcon" Icon="Solid_Spinner" Foreground="{StaticResource WhiteBrush}" Height="20" x:Shared="False" Spin="True" SpinDuration="1"/>-->
    <!--<Path x:Key="LoadIcon" Height="20"
          Data="M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />-->

    <Viewbox x:Key="ErrorIcon" Height="20" x:Shared="False" >
        <Path 
                  Data="M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z"
                  Fill="{StaticResource WhiteBrush}" />
    </Viewbox>
    <Viewbox x:Key="CloseIcon" Height="12" x:Shared="False" >
        <Path 
              Data="M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v340zM356.5 194.6L295.1 256l61.4 61.4c4.6 4.6 4.6 12.1 0 16.8l-22.3 22.3c-4.6 4.6-12.1 4.6-16.8 0L256 295.1l-61.4 61.4c-4.6 4.6-12.1 4.6-16.8 0l-22.3-22.3c-4.6-4.6-4.6-12.1 0-16.8l61.4-61.4-61.4-61.4c-4.6-4.6-4.6-12.1 0-16.8l22.3-22.3c4.6-4.6 12.1-4.6 16.8 0l61.4 61.4 61.4-61.4c4.6-4.6 12.1-4.6 16.8 0l22.3 22.3c4.7 4.6 4.7 12.1 0 16.8z"
              Fill="{StaticResource WhiteBrush}" />
    </Viewbox>

    <Viewbox x:Key="AttachIcon" Height="25" x:Shared="False" >
        <Path 
          Data="M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z"
          Fill="{StaticResource WhiteBrush}" >
            <Path.Triggers>
                <EventTrigger RoutedEvent="Path.Loaded">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty
                                ="(Path.Fill).(SolidColorBrush.Color)"
                                RepeatBehavior="10x"
                                AutoReverse="True">
                                    <LinearColorKeyFrame
                                    KeyTime="0:0:0"
                                    Value="{StaticResource WhiteColor}"/>
                                    <LinearColorKeyFrame
                                    KeyTime="0:0:1"
                                    Value="{StaticResource BlackColor}"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Path.Triggers>
        </Path>
    </Viewbox>


    <Path x:Key="SuccessIcon"
          Data="M 15.56055 5.9323048e-7 7.53125 10.197261 2.73242 5.2304706 0 7.8710906 7.82422 15.968751 18.54492 2.3515606 15.56055 5.9323048e-7 Z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />
    <Path x:Key="InfoIcon"
          Data="M 10.968748 8.9809305e-8 C 4.9320181 8.9809305e-8 -1.9073487e-6 4.9320201 -1.9073487e-6 10.96875 c 0 6.03672 4.9322600073487 10.9668 10.9687499073487 10.9668 6.03648 0 10.96875 -4.93008 10.96875 -10.9668 C 21.937498 4.9320201 17.005458 8.9809305e-8 10.968748 8.9809305e-8 Z m 0 2.000000010190695 c 4.95043 0 8.96875 4.0183 8.96875 8.9687499 0 4.95044 -4.01809 8.9668 -8.96875 8.9668 -4.9506899 0 -8.9687499 -4.01636 -8.9687499 -8.9668 0 -4.9504499 4.0183 -8.9687499 8.9687499 -8.9687499 z m -1.4999999 2.49805 0 3 2.9999999 0 0 -3 -2.9999999 0 z m 0 4.4707 0 8.9101599 2.9999999 0 0 -8.9101599 -2.9999999 0 z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />
    <Path x:Key="WarningIcon"
          Data="M 12.414089 4.6396565e-7 C 12.128679 -9.5360343e-6 11.832699 0.06810046 11.574249 0.19726046 c -0.29252 0.14627 -0.55012 0.39584 -0.70899 0.67383 l -0.002 0.002 L 0.22067905 19.77348 l -0.0117 0.0234 C 0.08326905 20.04831 -9.5367432e-7 20.33976 -9.5367432e-7 20.64844 c 0 0.30629 0.0851000036743 0.62597 0.23633000367432 0.89063 0.13469 0.2357 0.31957 0.44504 0.5332 0.60937 l 0.0137 0.0117 0.0156 0.01 C 1.076789 22.36867 1.440719 22.48654 1.785149 22.48654 l 21.28516 0 c 0.3398 0 0.70907 -0.12364 0.98828 -0.33398 0.2208 -0.16158 0.42089 -0.3689 0.56055 -0.61328 0.15122 -0.26466 0.23633 -0.58434 0.23633 -0.89063 0 -0.30868 -0.0852 -0.60013 -0.21094 -0.85156 l -0.01 -0.0234 -10.66992 -18.90038954 -0.002 -0.002 c -0.15887 -0.27808 -0.41633 -0.52756 -0.70899 -0.67383 -0.25845 -0.12918 -0.55443 -0.19726999603 -0.83984 -0.19725999603 z m 0 2.19531003603435 10.32617 18.2910095 -20.625 0 10.29883 -18.2910095 z m -1.48633 3.84765 0 8.9121095 3 0 0 -8.9121095 -3 0 z m 0 10.3808595 0 3 3 0 0 -3 -3 0 z"
          Fill="{StaticResource WhiteBrush}" x:Shared="False" />

    <ControlTemplate x:Key="OverButtonControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="TemplateBorder" Background="{StaticResource TransparentBrush}"
                RenderTransformOrigin="0.5,0.5"
                BorderBrush="{StaticResource BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DarkGrayBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Effect" Value="{StaticResource Shadow}"/>
                <Setter Property="RenderTransform" TargetName="TemplateBorder" Value="{StaticResource Scale1.1}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="RenderTransform" TargetName="TemplateBorder" Value="{StaticResource Scale0.9}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ButtonBase" x:Key="OverButton">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Tahoma"/>
        <Setter Property="Template" Value="{StaticResource OverButtonControlTemplate}"/>
    </Style>

    <Style TargetType="Button" x:Key="CloseButtonStyle" BasedOn="{StaticResource OverButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentControl DockPanel.Dock="Top" Content="{StaticResource CloseIcon}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style TargetType="Button" x:Key="NotifyButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#44FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Label Content="{TemplateBinding Content}"
                           Foreground="{TemplateBinding Foreground}"
                           Background="{TemplateBinding Background}"
                           HorizontalContentAlignment="Center"
                           MinWidth="80"  MaxWidth="120"
                           BorderBrush="{TemplateBinding Foreground, Converter={converters:ColorAlphaConverter}}"
                           BorderThickness="1"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#22FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#11000000"/>
                            <Setter Property="Foreground" Value="#FFAAAAAA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <wpf:NotificationTemplateSelector x:Key="NotificationTemplateSelector"/>

    <ControlTemplate x:Key="NotificationTemplate" TargetType="{x:Type controls:Notification}">
        <ControlTemplate.Resources>
            <DataTemplate DataType="{x:Type system:String}" x:Key="DefaultStringTemplate">
                <Border
                    Background="{Binding RelativeSource={RelativeSource AncestorType=controls:Notification}, Path=Background}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}"/>
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ImageSource}" x:Key="DefaultImageSourceTemplate">
                <Border
                    Background="{Binding RelativeSource={RelativeSource AncestorType=controls:Notification}, Path=Background}">
                    <Image Source="{Binding}"/>
                </Border>
            </DataTemplate>
            <DataTemplate DataType="{x:Type wpf:NotificationContent}" x:Key="DefaultNotificationTemplate">
                <Border x:Name="Border" Padding="12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Image Grid.Row="{Binding Image.Position , Converter={converters:ImagePositionGridRowConverter}}"
                               Grid.Column="0"
                               Grid.ColumnSpan="2"
                               Visibility="{Binding Image.Position ,
                                Converter={wpf:Combine First={converters:ImagePositionConverter Position=None},
                                Then={converters:BoolToVisibility Collapse=True, Inverse=True}}}"
                               Source="{Binding Image.Source}"
                               Margin="{Binding Image.Position , Converter={converters:ImagePositionMarginConverter}}"/>


                        <!--Visibility="{Binding ElementName=LeftPanel,
                        Converter={wpf:Combine
                        First={wpf:HasVisibleContent},
                        Then={converters:BoolToVisibility Collapse=True}}}"-->
                        <ContentControl Grid.Row="1" Grid.Column="0" Margin="0,0,12,0" Width="25" VerticalAlignment="Stretch">
                            <DockPanel x:Name="LeftPanel">

                                <ContentControl DockPanel.Dock="Top" x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type ImageSource}">
                                            <Image Source="{Binding }"/>
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>

                                <Button x:Name="Attach" DockPanel.Dock="Bottom"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
                                        Style="{StaticResource OverButton}"
                                         Visibility="Visible"
                                        controls:Notification.CloseOnClick="True"
                                        controls:Notification.AttachOnClick="{Binding}">
                                    <ContentControl x:Name="AttachIcon" DockPanel.Dock="Bottom" HorizontalAlignment="Center"  VerticalAlignment="Center" Content="{StaticResource AttachIcon}"/>
                                </Button>
                            </DockPanel>
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Icon, Converter={wpf:IsNull}}" Value="true"/>
                                                <Condition Binding="{Binding Type}" Value="None"/>
                                                <Condition Binding="{Binding Visibility, ElementName=Attach}" Value="Collapsed"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>

                        </ContentControl>

                        <DockPanel Grid.Column="1" Grid.Row="1" >
                            <TextBlock x:Name="TitleTxt" DockPanel.Dock="Top"
                                       Text="{Binding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       Margin="0,0,15,0"
                                       Visibility="{Binding Title,
                                         Converter={wpf:Combine
                                         First={wpf:StringIsNullOrWhiteSpace},
                                         Then={converters:BoolToVisibility Inverse=True, Collapse=True}}}"/>

                            <DockPanel LastChildFill="False" DockPanel.Dock="Bottom" Margin="0,8,0,0">

                                <Button x:Name="RightButton" Style="{StaticResource NotifyButton}" Command="{Binding RightButtonAction, Converter={wpf:ActionToCommandConverter}}"
                                        Content="{Binding RightButtonContent}" DockPanel.Dock="Right" controls:Notification.CloseOnClick="True"
                                        Visibility="{Binding RightButtonAction, Converter={wpf:Combine First={wpf:IsNull}, Then={converters:BoolToVisibility Collapse=True, Inverse=True}}}"/>
                                <Button x:Name="LeftButton" Style="{StaticResource NotifyButton}" Command="{Binding LeftButtonAction, Converter={wpf:ActionToCommandConverter}}"
                                        Content="{Binding LeftButtonContent}" DockPanel.Dock="Right" Margin="0,0,8,0" controls:Notification.CloseOnClick="True"
                                        Visibility="{Binding LeftButtonAction, Converter={wpf:Combine First={wpf:IsNull}, Then={converters:BoolToVisibility Collapse=True, Inverse=True}}}"/>
                            </DockPanel>

                            <TextBlock x:Name="MessageBox"
                                       Text="{Binding Message}"
                                       TextWrapping="Wrap"
                                       Opacity=".8"
                                       Margin="0,0,5,0" Visibility="{Binding Message,
                                         Converter={wpf:Combine
                                         First={wpf:StringIsNullOrWhiteSpace},
                                         Then={converters:BoolToVisibility Inverse=True, Collapse=True}}}"/>

                        </DockPanel>
                    </Grid>
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding TrimType}" Value="Attach">
                        <Setter TargetName="Attach" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter TargetName="MessageBox"  Property="LineStackingStrategy" Value="BlockLineHeight" />
                        <Setter TargetName="MessageBox" Property="helpers:NotificationLineHeightBehavior.Lines" 
                                Value="{Binding RowsCount}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}" Value="AttachIfMoreRows">
                        <Setter TargetName="Attach" Property="Visibility" Value="{Binding Converter={wpf:NotificationAttachVisibleConverter}}"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter TargetName="MessageBox"  Property="LineStackingStrategy" Value="BlockLineHeight" />
                        <Setter TargetName="MessageBox" Property="helpers:NotificationLineHeightBehavior.Lines" 
                                Value="{Binding RowsCount}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}" Value="Trim">
                        <Setter TargetName="Attach" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter TargetName="MessageBox" Property="LineStackingStrategy" Value="BlockLineHeight" />
                        <Setter TargetName="MessageBox" Property="helpers:NotificationLineHeightBehavior.Lines" 
                                Value="{Binding RowsCount}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TrimType}" Value="NoTrim">
                        <Setter TargetName="Attach" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="MessageBox" Property="TextTrimming" Value="None"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Notification">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource InfoIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.DefaultBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Information">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource InfoIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.InformationBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Success">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource SuccessIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.SuccessBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Warning">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource WarningIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.WarningBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Type}" Value="Error">
                        <Setter TargetName="Icon" Property="Content" Value="{StaticResource ErrorIcon}"/>
                        <Setter TargetName="Border" Property="Background" Value="{Binding Source={x:Static constants:NotificationConstants.ErrorBackgroundColor}}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Icon, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="Icon" Property="Content" Value="{Binding Icon}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Background, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="Border" Property="Background" Value="{Binding Background}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Foreground, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="TitleTxt" Property="Foreground" Value="{Binding Foreground}"/>
                        <Setter TargetName="MessageBox" Property="Foreground" Value="{Binding Foreground}"/>
                        <Setter TargetName="LeftButton" Property="Foreground" Value="{Binding Foreground}"/>
                        <Setter TargetName="RightButton" Property="Foreground" Value="{Binding Foreground}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TitleTextSettings, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="TitleTxt" Property="FontFamily" Value="{Binding TitleTextSettings.FontFamily}"/>
                        <Setter TargetName="TitleTxt" Property="FontSize" Value="{Binding TitleTextSettings.FontSize}"/>
                        <Setter TargetName="TitleTxt" Property="TextAlignment" Value="{Binding TitleTextSettings.TextAlignment}"/>
                        <Setter TargetName="TitleTxt" Property="HorizontalAlignment" Value="{Binding TitleTextSettings.HorizontalAlignment}"/>
                        <Setter TargetName="TitleTxt" Property="VerticalAlignment" Value="{Binding TitleTextSettings.VerticalTextAlignment}"/>
                        <Setter TargetName="TitleTxt" Property="FontStyle" Value="{Binding TitleTextSettings.FontStyle}"/>
                        <Setter TargetName="TitleTxt" Property="FontWeight" Value="{Binding TitleTextSettings.FontWeight}"/>
                        <Setter TargetName="TitleTxt" Property="Opacity" Value="{Binding TitleTextSettings.Opacity}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MessageTextSettings, Converter={wpf:IsNull}}" Value="false">
                        <Setter TargetName="MessageBox" Property="FontFamily" Value="{Binding MessageTextSettings.FontFamily}"/>
                        <Setter TargetName="MessageBox" Property="FontSize" Value="{Binding MessageTextSettings.FontSize}"/>
                        <Setter TargetName="MessageBox" Property="TextAlignment" Value="{Binding MessageTextSettings.TextAlignment}"/>
                        <Setter TargetName="MessageBox" Property="HorizontalAlignment" Value="{Binding MessageTextSettings.HorizontalAlignment}"/>
                        <Setter TargetName="MessageBox" Property="VerticalAlignment" Value="{Binding MessageTextSettings.VerticalTextAlignment}"/>
                        <Setter TargetName="MessageBox" Property="FontStyle" Value="{Binding MessageTextSettings.FontStyle}"/>
                        <Setter TargetName="MessageBox" Property="FontWeight" Value="{Binding MessageTextSettings.FontWeight}"/>
                        <Setter TargetName="MessageBox" Property="Opacity" Value="{Binding MessageTextSettings.Opacity}"/>
                    </DataTrigger>

                </DataTemplate.Triggers>
            </DataTemplate>
        </ControlTemplate.Resources>
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Margin="8,8,0,0">
            <Grid>
                <ContentPresenter/>
                <Button x:Name="PART_CloseButton" Style="{StaticResource CloseButtonStyle}" Margin="12" Foreground="{TemplateBinding Foreground}" Opacity=".8"
                        Visibility="{Binding XbtnVisibility, RelativeSource={RelativeSource AncestorType={x:Type controls:Notification}}}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="0" To="1" Duration="0:0:.2"/>
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" To="1" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="controls:Notification.NotificationCloseInvoked" >
                <BeginStoryboard>
                    <Storyboard Duration="0:0:.1">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleX" From="1" To="0.1" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
                <BeginStoryboard>
                    <Storyboard BeginTime="0:0:.2">
                        <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="1" To="0" Duration="0:0:.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:Notification}">
        <!--<Setter Property="Height" Value="100"/>-->
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <!--<Setter Property="Width" Value="350"/>-->
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="#444444"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template" Value="{StaticResource NotificationTemplate}"/>
        <Setter Property="ContentTemplateSelector" Value="{StaticResource NotificationTemplateSelector}"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Direction="0" ShadowDepth="0" Opacity=".25"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:NotificationArea}">
        <Setter Property="Margin" Value="0,0,8,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NotificationArea}" x:Name="parentControl">
                    <controls:ReversibleStackPanel x:Name="PART_Items"  ReverseOrder="{Binding IsReversed, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Position" Value="Center">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Center"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Center"/>
                        </Trigger>
                        <Trigger Property="Position" Value="CenterLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Center"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="CenterRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Center"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="Position" Value="TopLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="TopRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>

                        <Trigger Property="Position" Value="TopCenter">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="Position" Value="BottomLeft">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Left"/>
                        </Trigger>
                        <Trigger Property="Position" Value="BottomRight">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="Position" Value="BottomCenter">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="Position" Value="Absolute">
                            <Setter TargetName="PART_Items" Property="VerticalAlignment"
                                    Value="{Binding VertAlign, Source={x:Static constants:NotificationConstants.AbsolutePosition}}" />
                            <Setter TargetName="PART_Items" Property="HorizontalAlignment" 
                                    Value="{Binding HorAlign, Source={x:Static constants:NotificationConstants.AbsolutePosition}}" />
                            <Setter TargetName="PART_Items" Property="Margin" 
                                    Value="{Binding Margin, Source={x:Static constants:NotificationConstants.AbsolutePosition}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>